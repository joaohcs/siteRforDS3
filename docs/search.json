[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "APS - R para Ciência de Dados",
    "section": "",
    "text": "Hey! Welcome!\nThis website was created to host Group 5’s APS for the course ‘R for Data Science’ at Insper.\nClick on the button “APS” bellow to access the Initial Data Analysis.\nIn this project we conducted a Data Analysis Project using the Dataset Taxi Trips Chicago 2024 that can be found at Kaggle.\n\n\n\nAPS"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "APS.html",
    "href": "APS.html",
    "title": "APS - R para Ciência de Dados",
    "section": "",
    "text": "Este relatório descreve o plano de Análise de Dados para a Atividade Prática Supervisionada (APS) da matéria “R para Ciência de Dados” do Insper.\n\n# Carregando bibliotecas necessárias para os scripts nesse documento\nlibrary(tidyverse)"
  },
  {
    "objectID": "APS.html#introdução",
    "href": "APS.html#introdução",
    "title": "APS - R para Ciência de Dados",
    "section": "Introdução",
    "text": "Introdução\nEste relatório descreve o plano de Análise de Dados para a Atividade Prática Supervisionada (APS) da matéria “R para Ciência de Dados” do Insper.\n\n# Carregando bibliotecas necessárias para os scripts nesse documento\nlibrary(tidyverse)"
  },
  {
    "objectID": "APS.html#dataset---taxi-trips-chicago-2024",
    "href": "APS.html#dataset---taxi-trips-chicago-2024",
    "title": "APS - R para Ciência de Dados",
    "section": "Dataset - Taxi Trips Chicago 2024",
    "text": "Dataset - Taxi Trips Chicago 2024\n\nThe dataset used will be the Taxi Trips Chicago 2024, found on Kaggle at this link.\n\n\nThe dataset contains a wide range of data about taxi trips made within the city of Chicago during the year 2024 up to April 1st.\n\n\nThe information can be used to explore various patterns of consumption, fare behavior, travel times, locations with a high flow of trips, among other insights relevant for businesses, consumers, taxi drivers, and professionals responsible for public policies that are transport-related."
  },
  {
    "objectID": "APS.html#key-features",
    "href": "APS.html#key-features",
    "title": "APS - R para Ciência de Dados",
    "section": "Key Features",
    "text": "Key Features\nThe features contained in this Dataset are listed below along with a description and a brief summary of their values and structures.\n\n# Loading the Dataset\n\ntaxi_db &lt;- read_csv(\"taxi_trips_db.csv\")\n\n\n# Editing the name of a column since the author left an extra blank space\n\ntaxi_db &lt;- taxi_db |&gt; rename(`Dropoff Centroid Location` = `Dropoff Centroid  Location`)\n\n\n\n\n1. Trip ID\nA unique identifier for each trip, facilitating easy tracking and analysis.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Trip ID`)\n\n   Length     Class      Mode \n   865247 character character \n\n# 5 examples of instances\n\ntaxi_db$`Trip ID` |&gt; head(5)\n\n[1] \"0287f53fedcde6b0af9aab9e32cbd2cadb337eaa\"\n[2] \"1f0034299b914fd7b45002568576a353c83acb2f\"\n[3] \"01a0b77b722a0b91f45cb4fc90b3e64f76fd0681\"\n[4] \"14aff2071ac81c6450a8f8b0e1534497da900197\"\n[5] \"16d3a633e2f380cee4a7fa4677db163b6e91255d\"\n\n\n\n\n\n\n2. Taxi ID\nAn identifier for the taxi involved in each trip, enabling tracking of individual vehicles.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Taxi ID`)\n\n   Length     Class      Mode \n   865247 character character \n\n# 5 examples of instances\n\ntaxi_db$`Taxi ID` |&gt; head(5)\n\n[1] \"e54db25f18193a08f1f5754515e8c338480e04fb938ed3db5a0fccface463874280a3d496820aa02ac2c13c5238e2352f4c6cdfafbff3224043a64f366cbdaa4\"\n[2] \"4a263f78f56815be4acd38658af8fc1824ce4e15f7ec818332d18aa9c3f1603033dcd265b3758f1bbb56459581da1a204730a1784c1212546d3a16bc3fcb5309\"\n[3] \"4f1e94982e6851725add382f7981d64006ae7c38f3664f6575ef12ab44c1c6af6e02524b142e95c1d10974f66b6a2eda0d332643b01607e2ca3ff2a7241f6dee\"\n[4] \"de8e8659ceb9eb0da842a46b60c0a5207098ac69fc23ab1d6308a50a42e719c1b9d233d3b57a3591ee5789f9cc7e22e81496194980774e8035033e0788ec2633\"\n[5] \"d79d3e19a1d5f6cb0cd4449d5579412262a2f1b182799d84c7d713a3f94407a121a9000223cae430e4d4b55a23b94d61d064c5c17d1f6bcf227e9df554921b77\"\n\n\n\n\n\n\n3. Trip Start Timestamp\nWhen the trip started, rounded to the nearest 15 minutes.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Trip Start Timestamp`)\n\n   Length     Class      Mode \n   865247 character character \n\n# 5 examples of instances\n\ntaxi_db$`Trip Start Timestamp` |&gt; head(5)\n\n[1] \"03/01/2024 12:00:00 AM\" \"03/01/2024 12:00:00 AM\" \"03/01/2024 12:00:00 AM\"\n[4] \"03/01/2024 12:00:00 AM\" \"03/01/2024 12:00:00 AM\"\n\n\n\n\n\n\n4. Trip End Timestamp\nWhen the trip ended, rounded to the nearest 15 minutes.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Trip End Timestamp`)\n\n   Length     Class      Mode \n   865247 character character \n\n# 5 examples of instances\n\ntaxi_db$`Trip End Timestamp` |&gt; head(5)\n\n[1] \"03/01/2024 12:00:00 AM\" \"03/01/2024 12:15:00 AM\" \"03/01/2024 12:00:00 AM\"\n[4] \"03/01/2024 12:30:00 AM\" \"03/01/2024 12:15:00 AM\"\n\n\n\n\n\n\n5. Trip Seconds\nTime of the trip in seconds.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Trip Seconds`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n      0     459     900    1151    1591   86340     169 \n\n# 5 examples of instances\n\ntaxi_db$`Trip Seconds` |&gt; na.omit() |&gt; head(5)\n\n[1]   15  900  711 1770  849\n\n\n\n\n\n\n6. Trip Miles\nDistance of the trip in miles.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Trip Miles`)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n   0.000    0.910    3.070    6.563   11.710 3093.470        6 \n\n# 5 examples of instances\n\ntaxi_db$`Trip Miles` |&gt; na.omit() |&gt; head(5)\n\n[1]  0.09  3.00  5.84 13.36  6.13\n\n\n\n\n\n\n7. Pickup Census Tract\nThe Census Tract where the trip began. For privacy, this Census Tract is not shown for some trips. This column often will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Pickup Census Tract`)\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max.      NA's \n1.703e+10 1.703e+10 1.703e+10 1.703e+10 1.703e+10 1.703e+10    537996 \n\n# 5 examples of instances\n\ntaxi_db$`Pickup Census Tract` |&gt; na.omit() |&gt; head(5)\n\n[1] 17031980000 17031980000 17031980100 17031060900 17031980000\n\n\n\n\n\n\n8. Dropoff Census Tract\nThe Census Tract where the trip ended. For privacy, this Census Tract is not shown for some trips. This column often will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Dropoff Census Tract`)\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max.      NA's \n1.703e+10 1.703e+10 1.703e+10 1.703e+10 1.703e+10 1.703e+10    551393 \n\n# 5 examples of instances\n\ntaxi_db$`Dropoff Census Tract` |&gt; na.omit() |&gt; head(5)\n\n[1] 17031060900 17031980000 17031320100 17031980000 17031060900\n\n\n\n\n\n\n9. Pickup Community Area\nThe Community Area where the trip began. This column will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Pickup Community Area`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   1.00    8.00   32.00   36.66   69.00   77.00   23195 \n\n# 5 examples of instances\n\ntaxi_db$`Pickup Community Area` |&gt; na.omit() |&gt; head(5)\n\n[1]  8 24 56 76  8\n\n\n\n\n\n\n10. Dropoff Community Area\nThe Community Area where the trip ended. This column will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Dropoff Community Area`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   1.00    8.00   28.00   25.85   32.00   77.00   83853 \n\n# 5 examples of instances\n\ntaxi_db$`Dropoff Community Area` |&gt; na.omit() |&gt; head(5)\n\n[1]  8  8  3  3 28\n\n\n\n\n\n\n11. Fare\nThe fare for the trip.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Fare`)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n    0.00     8.00    15.75    22.06    33.75  9999.75     2045 \n\n# 5 examples of instances\n\ntaxi_db$`Fare` |&gt; na.omit() |&gt; head(5)\n\n[1]  3.25 12.00 16.75 34.75 18.51\n\n\n\n\n\n\n12. Tips\nThe tip for the trip. Cash tips generally will not be recorded.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Tips`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  0.000   0.000   0.000   2.761   4.000 200.000    2045 \n\n# 5 examples of instances\n\ntaxi_db$`Tips` |&gt; na.omit() |&gt; head(5)\n\n[1] 0.00 0.00 4.45 7.85 4.31\n\n\n\n\n\n\n13. Tolls\nThe tolls for the trip. A toll is a fee that must be paid to use certain roads, bridges or tunnels during the trip.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Tolls`)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n   0.000    0.000    0.000    0.063    0.000 4444.440     2045 \n\n# 5 examples of instances\n\ntaxi_db$`Tolls` |&gt; na.omit() |&gt; head(5)\n\n[1] 0 0 0 0 0\n\n\n\n\n\n\n14. Extras\nExtra charges for the trip.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Extras`)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n   0.000    0.000    0.000    2.149    3.000 5051.100     2045 \n\n# 5 examples of instances\n\ntaxi_db$`Extras` |&gt; na.omit() |&gt; head(5)\n\n[1] 35  0  5  4  0\n\n\n\n\n\n\n15. Trip Total\nTotal cost of the trip, including fare, tips, tolls, and extras.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Trip Total`)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n    0.00    10.00    18.78    27.20    40.90  9999.75     2045 \n\n# 5 examples of instances\n\ntaxi_db$`Trip Total` |&gt; na.omit() |&gt; head(5)\n\n[1] 38.75 12.00 26.70 47.10 22.82\n\n\n\n\n\n\n16. Payment Type\nType of payment for the trip.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Payment Type`)\n\n   Length     Class      Mode \n   865247 character character \n\n# 5 examples of instances\n\ntaxi_db$`Payment Type` |&gt; na.omit() |&gt; head(5)\n\n[1] \"Credit Card\" \"Cash\"        \"Credit Card\" \"Credit Card\" \"Mobile\"     \n\n\n\n\n\n\n17. Company\nThe taxi company.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Company`)\n\n   Length     Class      Mode \n   865247 character character \n\n# 5 examples of instances\n\ntaxi_db$`Company` |&gt; head(5)\n\n[1] \"City Service\"              \"Taxi Affiliation Services\"\n[3] \"City Service\"              \"Sun Taxi\"                 \n[5] \"5 Star Taxi\"              \n\n\n\n\n\n\n18. Pickup Centroid Latitude\nThe latitude of the center of the pickup census tract or the community area if the census tract has been hidden for privacy. This column often will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Pickup Centroid Latitude`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  41.66   41.88   41.90   41.90   41.98   42.02   22966 \n\n# 5 examples of instances\n\ntaxi_db$`Pickup Centroid Latitude` |&gt; na.omit() |&gt; head(5)\n\n[1] 41.89960 41.90121 41.79259 41.98026 41.89960\n\n\n\n\n\n\n19. Pickup Centroid Longitude\nThe longitude of the center of the pickup census tract or the community area if the census tract has been hidden for privacy. This column often will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Pickup Centroid Longitude`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n -87.91  -87.77  -87.64  -87.70  -87.63  -87.53   22966 \n\n# 5 examples of instances\n\ntaxi_db$`Pickup Centroid Longitude` |&gt; na.omit() |&gt; head(5)\n\n[1] -87.63331 -87.67636 -87.76962 -87.91362 -87.63331\n\n\n\n\n\n\n20. Pickup Centroid Location\nThe location of the center of the pickup census tract or the community area if the census tract has been hidden for privacy. This column often will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Pickup Centroid Location`)\n\n   Length     Class      Mode \n   865247 character character \n\n# 5 examples of instances\n\ntaxi_db$`Pickup Centroid Location` |&gt; na.omit() |&gt; head(5)\n\n[1] \"POINT (-87.6333080367 41.899602111)\" \n[2] \"POINT (-87.6763559892 41.9012069941)\"\n[3] \"POINT (-87.7696154528 41.7925923603)\"\n[4] \"POINT (-87.913624596 41.9802643146)\" \n[5] \"POINT (-87.6333080367 41.899602111)\" \n\n\n\n\n\n\n21. Dropoff Centroid Latitude\nThe latitude of the center of the dropoff census tract or the community area if the census tract has been hidden for privacy. This column often will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Dropoff Centroid Latitude`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  41.65   41.88   41.89   41.89   41.92   42.02   79675 \n\n# 5 examples of instances\n\ntaxi_db$`Dropoff Centroid Latitude` |&gt; na.omit() |&gt; head(5)\n\n[1] 41.89960 41.89960 41.96581 41.96581 41.87401\n\n\n\n\n\n\n22. Dropoff Centroid Longitude\nThe longitude of the center of the dropoff census tract or the community area if the census tract has been hidden for privacy. This column often will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Dropoff Centroid Longitude`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n -87.91  -87.66  -87.63  -87.66  -87.63  -87.53   79675 \n\n# 5 examples of instances\n\ntaxi_db$`Dropoff Centroid Longitude` |&gt; na.omit() |&gt; head(5)\n\n[1] -87.63331 -87.63331 -87.65588 -87.65588 -87.66352\n\n\n\n\n\n\n23. Dropoff Centroid Location\nThe location of the center of the dropoff census tract or the community area if the census tract has been hidden for privacy. This column often will be blank for locations outside Chicago.\n\n# Descriptive statistics and examples from the column \n\nsummary(taxi_db$`Dropoff Centroid Location`)\n\n   Length     Class      Mode \n   865247 character character \n\n# 5 examples of instances\n\ntaxi_db$`Dropoff Centroid Location` |&gt; na.omit() |&gt; head(5)\n\n[1] \"POINT (-87.6333080367 41.899602111)\" \"POINT (-87.6333080367 41.899602111)\"\n[3] \"POINT (-87.6558787862 41.96581197)\"  \"POINT (-87.6558787862 41.96581197)\" \n[5] \"POINT (-87.6635175498 41.874005383)\""
  },
  {
    "objectID": "APS.html#introduction",
    "href": "APS.html#introduction",
    "title": "APS - R para Ciência de Dados",
    "section": "Introduction",
    "text": "Introduction\nThis report describes the plan for a Data Analysis project as described in the scope of the APS for the ‘R for Data Science’ course at Insper.\n\n# Loading libraries needed for the project\nlibrary(tidyverse)"
  },
  {
    "objectID": "APS.html#descriptive-analysis-of-the-dataset",
    "href": "APS.html#descriptive-analysis-of-the-dataset",
    "title": "APS - R para Ciência de Dados",
    "section": "Descriptive Analysis of the Dataset",
    "text": "Descriptive Analysis of the Dataset\n\nDealing with NA values\n\nLooking at the results of the summary, we noticed a lot of NA values throughout the features. For some of them (features 7,8, 9, 10, 18, 19, 20, 21, 22, 23), the author tells us previously that the column will often or always show NA values for locations outside Chicago.\n\n\nBecause of that, we made a decision of omitting the lines for which those features = NA. We are assuming here that most, if not all, NAs in those columns are due to the fact that the trip was held outside Chicago at some point (either the pickup or dropoff).\n\n\nWe do recognize though two consequences that will follow that decision: (i) that our analysis and any eventual models will not be applicable to trips held outside of Chicago in any direction (pickup or dropoff).; (ii) We may be excluding some lines that for some reason where related to trips held within Chicago, therefore redduccing the amount of data we have.\n\n\nEven though there are those consequences, we still believe wee can create insightful analysis from the remaining data, understanding though the reduction of scope for which those insights will be applicable.\n\n\n\n\n# Selecting the columns we want to check for NAs\ncolumns_list &lt;- c(\n  \"Pickup Census Tract\", \"Dropoff Census Tract\",\n  \"Pickup Community Area\", \"Dropoff Community Area\",\n  \"Pickup Centroid Latitude\", \"Pickup Centroid Longitude\",\n  \"Pickup Centroid Location\", \"Dropoff Centroid Latitude\",\n  \"Dropoff Centroid Longitude\", \"Dropoff Centroid Location\"\n)\n\n# Filtering the dataset\ntaxi_db_chicago &lt;- taxi_db |&gt; \n  filter(if_all(all_of(columns_list), ~ !is.na(.))) # Applying !is.na() across all columns in columns_list\n\n\n\n\nNow, let’s evaluate the remaining data, and the appearance of NA values in other columns.\n\n\n# Evaluating other columns for NA values\ntaxi_db_chicago |&gt; \n  select(-all_of(columns_list)) |&gt; \n  summary()\n\n   Trip ID            Taxi ID          Trip Start Timestamp Trip End Timestamp\n Length:308344      Length:308344      Length:308344        Length:308344     \n Class :character   Class :character   Class :character     Class :character  \n Mode  :character   Mode  :character   Mode  :character     Mode  :character  \n                                                                              \n                                                                              \n                                                                              \n                                                                              \n  Trip Seconds       Trip Miles           Fare             Tips       \n Min.   :    0.0   Min.   :  0.000   Min.   :  0.00   Min.   :  0.00  \n 1st Qu.:  346.0   1st Qu.:  0.700   1st Qu.:  6.25   1st Qu.:  0.00  \n Median :  570.0   Median :  1.330   Median :  9.00   Median :  2.00  \n Mean   :  944.7   Mean   :  5.014   Mean   : 17.75   Mean   :  3.09  \n 3rd Qu.: 1374.0   3rd Qu.:  5.300   3rd Qu.: 33.00   3rd Qu.:  4.00  \n Max.   :86340.0   Max.   :664.900   Max.   :814.00   Max.   :110.00  \n NA's   :57        NA's   :3         NA's   :1084     NA's   :1084    \n     Tolls              Extras           Trip Total      Payment Type      \n Min.   :   0.000   Min.   :   0.000   Min.   :   0.00   Length:308344     \n 1st Qu.:   0.000   1st Qu.:   0.000   1st Qu.:   7.75   Class :character  \n Median :   0.000   Median :   0.000   Median :  11.22   Mode  :character  \n Mean   :   0.025   Mean   :   1.459   Mean   :  22.56                     \n 3rd Qu.:   0.000   3rd Qu.:   2.000   3rd Qu.:  43.00                     \n Max.   :4444.440   Max.   :5051.100   Max.   :8896.63                     \n NA's   :1084       NA's   :1084       NA's   :1084                        \n   Company         \n Length:308344     \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\n\n\nIt is interesting to note that for some features, there is exactly the same number of NAs. Let’s investigate those lines further.\n\n\ntemp_db &lt;- taxi_db_chicago |&gt;\n  filter(is.na(taxi_db_chicago$Fare)) |&gt; \n  select(-all_of(columns_list))\n  \ntemp_db |&gt; summary()\n\n   Trip ID            Taxi ID          Trip Start Timestamp Trip End Timestamp\n Length:1084        Length:1084        Length:1084          Length:1084       \n Class :character   Class :character   Class :character     Class :character  \n Mode  :character   Mode  :character   Mode  :character     Mode  :character  \n                                                                              \n                                                                              \n                                                                              \n                                                                              \n  Trip Seconds      Trip Miles          Fare           Tips          Tolls     \n Min.   :   0.0   Min.   : 0.000   Min.   : NA    Min.   : NA    Min.   : NA   \n 1st Qu.: 268.0   1st Qu.: 0.590   1st Qu.: NA    1st Qu.: NA    1st Qu.: NA   \n Median : 501.0   Median : 1.255   Median : NA    Median : NA    Median : NA   \n Mean   : 932.4   Mean   : 4.769   Mean   :NaN    Mean   :NaN    Mean   :NaN   \n 3rd Qu.:1288.0   3rd Qu.: 4.105   3rd Qu.: NA    3rd Qu.: NA    3rd Qu.: NA   \n Max.   :7193.0   Max.   :47.830   Max.   : NA    Max.   : NA    Max.   : NA   \n NA's   :35                        NA's   :1084   NA's   :1084   NA's   :1084  \n     Extras       Trip Total   Payment Type         Company         \n Min.   : NA    Min.   : NA    Length:1084        Length:1084       \n 1st Qu.: NA    1st Qu.: NA    Class :character   Class :character  \n Median : NA    Median : NA    Mode  :character   Mode  :character  \n Mean   :NaN    Mean   :NaN                                         \n 3rd Qu.: NA    3rd Qu.: NA                                         \n Max.   : NA    Max.   : NA                                         \n NA's   :1084   NA's   :1084                                        \n\ntemp_db |&gt; group_by(temp_db$`Payment Type`) |&gt; \n  summarise(Count = n()) |&gt; \n  mutate(Percentage = Count / sum(Count) * 100)\n\n# A tibble: 3 × 3\n  `temp_db$\\`Payment Type\\`` Count Percentage\n  &lt;chr&gt;                      &lt;int&gt;      &lt;dbl&gt;\n1 Cash                        1032      95.2 \n2 Credit Card                   35       3.23\n3 Mobile                        17       1.57\n\n\n\n\n\nAs we can see, for most of this data the payment method is cash, what makes sense since it is harder to track Fare, Tips, Extras, Tolls and therefore Trip Totals when the user is paying by cash.\n\n\nIn order to not loose those values and to maintain consistency, we can fill those NAs with the Median Value of the column, considering each specific mile range (using Trip Miles), since it is in our point of view the best estimator for the price of a trip. Later in the analysis we may change that strategy to actually fill those NAs by creating a model that predicts the value based on the other features available.\n\n\n\nData Types\n\nAs we could see from the summaries above, some data types are not the ideal for data analysis. For example, the timestamps are of type character in the dataset. We could definetely, during the analysis, convert them to objects that are more related to standard time formats, that way it will be easier to manipulate this data, build models and extract insight from them.\n\n\ntaxi_db_chicago |&gt;\n  select(`Trip End Timestamp`,  `Trip Start Timestamp`) |&gt; \n  sapply(class) |&gt; \n  print()\n\n  Trip End Timestamp Trip Start Timestamp \n         \"character\"          \"character\" \n\n\n\n\n\n\nDescriptive Statistics\n\nIn the section Key Features we already called a summary and a head() for a brief overview of the possible variables. Also, in this section we looked at some basic statistics such as mean, median, max and others. However, we can go deeper in this analysis by plotting histograms and box plots in order to get a better understanding of distributions. Also, we can benefit from an understanding of the behavior of dispersion and variance through the dataset features, pretty useful for some models."
  },
  {
    "objectID": "APS.html#first-draft-roadmap-for-the-data-analysis-project",
    "href": "APS.html#first-draft-roadmap-for-the-data-analysis-project",
    "title": "APS - R para Ciência de Dados",
    "section": "First-Draft Roadmap for the Data Analysis Project",
    "text": "First-Draft Roadmap for the Data Analysis Project\n\nDealing with NA values\n\nLooking at the results of the summary, we noticed a lot of NA values throughout the features. For some of them (features 7,8, 9, 10, 18, 19, 20, 21, 22, 23), the author tells us previously that the column will often or always show NA values for locations outside Chicago.\n\n\nBecause of that, we made a decision of omitting the lines for which those features = NA. We are assuming here that most, if not all, NAs in those columns are due to the fact that the trip was held outside Chicago at some point (either the pickup or dropoff).\n\n\nWe do recognize though two consequences that will follow that decision: (i) that our analysis and any eventual models will not be applicable to trips held outside of Chicago in any direction (pickup or dropoff).; (ii) We may be excluding some lines that for some reason where related to trips held within Chicago, therefore redduccing the amount of data we have.\n\n\nEven though there are those consequences, we still believe wee can create insightful analysis from the remaining data, understanding though the reduction of scope for which those insights will be applicable.\n\n\n\n\n# Selecting the columns we want to check for NAs\ncolumns_list &lt;- c(\n  \"Pickup Census Tract\", \"Dropoff Census Tract\",\n  \"Pickup Community Area\", \"Dropoff Community Area\",\n  \"Pickup Centroid Latitude\", \"Pickup Centroid Longitude\",\n  \"Pickup Centroid Location\", \"Dropoff Centroid Latitude\",\n  \"Dropoff Centroid Longitude\", \"Dropoff Centroid Location\"\n)\n\n# Filtering the dataset\ntaxi_db_chicago &lt;- taxi_db |&gt; \n  filter(if_all(all_of(columns_list), ~ !is.na(.))) # Applying !is.na() across all columns in columns_list\n\n\nAlso let’s correct some company names that came slightly different but are referring to the same company.\n\n\ncompany_mapping &lt;- c(\n  \"312 Medallion Management Corp\" = \"312 Medallion Management Corp\",\n  \"Medallion Management Corp\" = \"312 Medallion Management Corp\",\n  \"Blue Ribbon Taxi Association Inc.\" = \"Blue Ribbon Taxi Association Inc.\",\n  \"Blue Ribbon Taxi Association\" = \"Blue Ribbon Taxi Association Inc.\",\n  \"Blue Ribbon Taxi Association Inc\" = \"Blue Ribbon Taxi Association Inc.\",\n  \"Taxicab Insurance Agency Llc\" = \"Taxicab Insurance Agency, LLC\",\n  \"Taxicab Insurance Agency, LLC\" = \"Taxicab Insurance Agency, LLC\",\n  \"Taxi Affiliation Services\"  = \"Taxi Affiliation Services LLC - Yell\",\n  \"Taxi Affiliation Services Llc - Yell\" = \"Taxi Affiliation Services LLC - Yell\",\n  \"Taxi Affiliation Services LLC - Yell\" = \"Taxi Affiliation Services LLC - Yell\",\n  \"Choice Taxi Association Inc\" = \"Choice Taxi Association Inc\",\n  \"Choice Taxi Association\" = \"Choice Taxi Association Inc\"\n)\n\ntaxi_db_chicago &lt;- taxi_db_chicago |&gt; \n  mutate(Company = recode(Company, !!!company_mapping))\n\n\n\n\nNow, let’s evaluate the remaining data, and the appearance of NA values in other columns.\n\n\n# Evaluating other columns for NA values\ntaxi_db_chicago |&gt; \n  select(-all_of(columns_list)) |&gt; \n  summary()\n\n   Trip ID            Taxi ID          Trip Start Timestamp Trip End Timestamp\n Length:308344      Length:308344      Length:308344        Length:308344     \n Class :character   Class :character   Class :character     Class :character  \n Mode  :character   Mode  :character   Mode  :character     Mode  :character  \n                                                                              \n                                                                              \n                                                                              \n                                                                              \n  Trip Seconds       Trip Miles           Fare             Tips       \n Min.   :    0.0   Min.   :  0.000   Min.   :  0.00   Min.   :  0.00  \n 1st Qu.:  346.0   1st Qu.:  0.700   1st Qu.:  6.25   1st Qu.:  0.00  \n Median :  570.0   Median :  1.330   Median :  9.00   Median :  2.00  \n Mean   :  944.7   Mean   :  5.014   Mean   : 17.75   Mean   :  3.09  \n 3rd Qu.: 1374.0   3rd Qu.:  5.300   3rd Qu.: 33.00   3rd Qu.:  4.00  \n Max.   :86340.0   Max.   :664.900   Max.   :814.00   Max.   :110.00  \n NA's   :57        NA's   :3         NA's   :1084     NA's   :1084    \n     Tolls              Extras           Trip Total      Payment Type      \n Min.   :   0.000   Min.   :   0.000   Min.   :   0.00   Length:308344     \n 1st Qu.:   0.000   1st Qu.:   0.000   1st Qu.:   7.75   Class :character  \n Median :   0.000   Median :   0.000   Median :  11.22   Mode  :character  \n Mean   :   0.025   Mean   :   1.459   Mean   :  22.56                     \n 3rd Qu.:   0.000   3rd Qu.:   2.000   3rd Qu.:  43.00                     \n Max.   :4444.440   Max.   :5051.100   Max.   :8896.63                     \n NA's   :1084       NA's   :1084       NA's   :1084                        \n   Company         \n Length:308344     \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\n\n\nIt is interesting to note that for some features, there is exactly the same number of NAs. Let’s investigate those lines further.\n\n\ntemp_db &lt;- taxi_db_chicago |&gt;\n  filter(is.na(taxi_db_chicago$Fare)) |&gt; \n  select(-all_of(columns_list))\n  \ntemp_db |&gt; summary()\n\n   Trip ID            Taxi ID          Trip Start Timestamp Trip End Timestamp\n Length:1084        Length:1084        Length:1084          Length:1084       \n Class :character   Class :character   Class :character     Class :character  \n Mode  :character   Mode  :character   Mode  :character     Mode  :character  \n                                                                              \n                                                                              \n                                                                              \n                                                                              \n  Trip Seconds      Trip Miles          Fare           Tips          Tolls     \n Min.   :   0.0   Min.   : 0.000   Min.   : NA    Min.   : NA    Min.   : NA   \n 1st Qu.: 268.0   1st Qu.: 0.590   1st Qu.: NA    1st Qu.: NA    1st Qu.: NA   \n Median : 501.0   Median : 1.255   Median : NA    Median : NA    Median : NA   \n Mean   : 932.4   Mean   : 4.769   Mean   :NaN    Mean   :NaN    Mean   :NaN   \n 3rd Qu.:1288.0   3rd Qu.: 4.105   3rd Qu.: NA    3rd Qu.: NA    3rd Qu.: NA   \n Max.   :7193.0   Max.   :47.830   Max.   : NA    Max.   : NA    Max.   : NA   \n NA's   :35                        NA's   :1084   NA's   :1084   NA's   :1084  \n     Extras       Trip Total   Payment Type         Company         \n Min.   : NA    Min.   : NA    Length:1084        Length:1084       \n 1st Qu.: NA    1st Qu.: NA    Class :character   Class :character  \n Median : NA    Median : NA    Mode  :character   Mode  :character  \n Mean   :NaN    Mean   :NaN                                         \n 3rd Qu.: NA    3rd Qu.: NA                                         \n Max.   : NA    Max.   : NA                                         \n NA's   :1084   NA's   :1084                                        \n\ntemp_db |&gt; group_by(temp_db$`Payment Type`) |&gt; \n  summarise(Count = n()) |&gt; \n  mutate(Percentage = Count / sum(Count) * 100)\n\n# A tibble: 3 × 3\n  `temp_db$\\`Payment Type\\`` Count Percentage\n  &lt;chr&gt;                      &lt;int&gt;      &lt;dbl&gt;\n1 Cash                        1032      95.2 \n2 Credit Card                   35       3.23\n3 Mobile                        17       1.57\n\n\n\n\n\nAs we can see, for most of this data the payment method is cash, what makes sense since it is harder to track Fare, Tips, Extras, Tolls and therefore Trip Totals when the user is paying by cash.\n\n\nIn order to not loose those values and to maintain consistency, we can fill those NAs with the Median Value of the column. We can do that for all numeric columns.\n\n\n# Filling the NAs with median value\ntaxi_db_chicago &lt;- taxi_db_chicago |&gt; \n  mutate(across(where(is.numeric), ~ifelse(is.na(.), median(., na.rm = TRUE), .))) # Usando função anônima com .\n\n\n\nData Types\n\nAs we could see from the summaries above, some data types are not the ideal for data analysis. For example, the timestamps are of type character in the dataset. We could definetely, during the analysis, convert them to objects that are more related to standard time formats, that way it will be easier to manipulate this data, build models and extract insight from them.\n\n\ntaxi_db_chicago |&gt;\n  select(`Trip End Timestamp`,  `Trip Start Timestamp`) |&gt; \n  sapply(class) |&gt; \n  print()\n\n  Trip End Timestamp Trip Start Timestamp \n         \"character\"          \"character\" \n\n## Converting to datetime\n# Transformando a classe das colunas de tempo para tipo data\ntaxi_db_chicago &lt;- taxi_db_chicago |&gt; \n  mutate(\n    `Trip Start Timestamp` = mdy_hms(`Trip Start Timestamp`, tz = \"America/Chicago\"),\n    `Trip End Timestamp` = mdy_hms(`Trip End Timestamp`, tz = \"America/Chicago\")\n  )\n\n\n\n\n\nFinal Dataset\n\nFrom now on we will use this treated version of the dataset, the treated dataset is called trips_chicago.\n\n\n# New dataset\ntrips_chicago &lt;- taxi_db_chicago\n\n\n\n\n\nDescriptive Statistics\n\nIn the section Key Features we already called a summary() and a head() for a brief overview of the possible variables. Also, in this section we looked at some basic statistics such as mean, median, max and others. However, we can go deeper in this analysis by plotting histograms and box plots in order to get a better understanding of distributions. Also, we can benefit from an understanding of the behavior of dispersion and variance through the dataset features, pretty useful for some models.\n\n\nlibrary(ggcorrplot)\n\n# List of variables for descriptive analysis\nvariables &lt;- c(\"Trip Seconds\", \"Trip Miles\", \"Fare\", \"Tips\", \"Extras\", \"Trip Total\")\n\n# Plotting histograms and box plots for each variable after log transformation\nfor (var in variables) {\n  # Add a small constant to handle zero values\n  trips_chicago &lt;- trips_chicago |&gt; mutate(\"{var}_log\" := log1p(.data[[var]]))\n  \n  # Histogram for log-transformed variable\n  p1 &lt;- ggplot(trips_chicago, aes(x = .data[[paste0(var, \"_log\")]])) +\n    geom_histogram(bins = 30, fill = \"#feb303\", color = \"black\") +\n    labs(title = paste(\"Log-Transformed Histogram of\", var), x = paste(var, \"(log)\"), y = \"Density (%)\")\n  print(p1)\n  \n  # Box plot for log-transformed variable\n  p2 &lt;- ggplot(trips_chicago, aes(y = .data[[paste0(var, \"_log\")]])) +\n    geom_boxplot(fill = \"#feb303\", color = \"black\") +\n    labs(title = paste(\"Log-Transformed Boxplot of\", var), y = paste(var, \"(log)\"))\n  print(p2)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Analyzing variance and dispersion for log-transformed variables\nfor (var in variables) {\n  log_var &lt;- paste0(var, \"_log\")\n  \n  if (log_var %in% colnames(trips_chicago)) {\n    var_summary &lt;- trips_chicago |&gt; summarize(\n      mean = mean(.data[[log_var]], na.rm = TRUE),\n      median = median(.data[[log_var]], na.rm = TRUE),\n      sd = sd(.data[[log_var]], na.rm = TRUE),\n      var = var(.data[[log_var]], na.rm = TRUE),\n      min = min(.data[[log_var]], na.rm = TRUE),\n      max = max(.data[[log_var]], na.rm = TRUE),\n      q1 = quantile(.data[[log_var]], 0.25, na.rm = TRUE),\n      q3 = quantile(.data[[log_var]], 0.75, na.rm = TRUE)\n    )\n    print(paste(\"Descriptive Statistics for Log-Transformed\", var))\n    print(var_summary)\n  }\n}\n\n[1] \"Descriptive Statistics for Log-Transformed Trip Seconds\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  6.27   6.35  1.40  1.96     0  11.4  5.85  7.23\n[1] \"Descriptive Statistics for Log-Transformed Trip Miles\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  1.22  0.846  1.01  1.03     0  6.50 0.531  1.84\n[1] \"Descriptive Statistics for Log-Transformed Fare\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  2.57   2.30 0.812 0.660     0  6.70  1.98  3.52\n[1] \"Descriptive Statistics for Log-Transformed Tips\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 0.990   1.10 0.911 0.831     0  4.71     0  1.61\n[1] \"Descriptive Statistics for Log-Transformed Extras\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 0.505      0 0.747 0.559     0  8.53     0  1.10\n[1] \"Descriptive Statistics for Log-Transformed Trip Total\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  2.77   2.50 0.844 0.712     0  9.09  2.17  3.78\n\n# Create log-transformed variables for correlation analysis\ntrips_chicago &lt;- trips_chicago |&gt; \n  mutate(\n    Trip_Seconds_log = log1p(`Trip Seconds`),\n    Trip_Miles_log = log1p(`Trip Miles`),\n    Fare_log = log1p(Fare),\n    Tips_log = log1p(Tips),\n    Extras_log = log1p(Extras),\n    Trip_Total_log = log1p(`Trip Total`)\n  )\n\n# Select the log-transformed variables for correlation analysis\nlog_transformed_vars &lt;- trips_chicago |&gt; \n  select(Trip_Seconds_log, Trip_Miles_log, Fare_log, Tips_log, Extras_log, Trip_Total_log)\n\n# Compute the correlation matrix\ncor_matrix &lt;- cor(log_transformed_vars, use = \"complete.obs\")\n\n# Plot the correlation matrix\nggcorrplot(cor_matrix, \n           hc.order = TRUE, \n           type = \"lower\", \n           lab = TRUE, \n           lab_size = 3.5, \n           method = \"circle\", \n           colors = c(\"#6D9EC1\", \"white\", \"#E46726\"), \n           title = \"Correlation Matrix of Log-Transformed Variables\", \n           ggtheme = theme_minimal()) +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\", hjust = 0.5),\n    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),\n    axis.text.y = element_text(angle=0)\n    )\n\n\n\n\n\nlibrary(ggplot2) # Already in tidyverse\n\ntheme_set(theme_bw())\n\n# Example of histogram\ntrips_chicago |&gt; \n  ggplot(aes(x = taxi_db_chicago$`Trip Miles`, y=..density..)) +\n  geom_histogram(bins = 25, fill = \"#feb303\", color = \"black\") +\n  xlim(0, 75) +\n  ylim(0, 0.045) +\n  labs(title = \"Histogram for Trip Miles\", x = \"Trip Miles\", y = \"Density (%)\")\n\n\n\n\n\ntheme_set(theme_bw())\n\n# Example of boxplot\ntrips_chicago |&gt; \n  ggplot(aes(y = trips_chicago$`Trip Miles`)) +\n  geom_boxplot(fill = \"#feb303\", color = \"black\") +\n  ylim(0,5) +\n  labs(title = \"Boxplot for Trip Miles\", y = \"Trip Miles\")\n\n\n\n\n\n\n\nTrying to plot this boxplot, for example, already shows the strong concentration of trips in the ‘few miles’ category, what can also be seen in the histogram. Such kind of distribution will definetely interfere with the way we analyze this feature, we will probably need to apply some transformations to it such as applying log.\n\n\n\n\n\nGeographical analysis\n\nWe can use libraries that will help us plot in Chicago’s Map the places with most pickups or dropoffs. We can also visualize the data segmented by company in order to grasp a better understanding of market dynamics and competition landscape.\n\n\nBelow we have the maps for pickups and dropoffs\n\n\nlibrary(ggplot2)\nlibrary(sf)\n\nLinking to GEOS 3.11.2, GDAL 3.8.2, PROJ 9.3.1; sf_use_s2() is TRUE\n\nlibrary(dplyr)\n\n# Maps for Pickups\n# Convert to an sf object using Pickup Centroid Longitude and Pickup Centroid Latitude\npickup_sf &lt;- trips_chicago |&gt; \n  st_as_sf(coords = c(\"Pickup Centroid Longitude\", \"Pickup Centroid Latitude\"), crs = 4326, agr = \"constant\")\n\n# Read the Chicago shapefile\nchicago_shapefile &lt;- st_read(\"boundaries/chicago_shape.shp\")\n\nReading layer `chicago_shape' from data source \n  `C:\\Users\\jhcsa\\Documents\\siteRforDS\\boundaries\\chicago_shape.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -87.94011 ymin: 41.64454 xmax: -87.52414 ymax: 42.02304\nGeodetic CRS:  WGS 84\n\nggplot() +\n  geom_sf(data = chicago_shapefile, fill = \"lightblue\", color = \"black\") +\n  geom_sf(data = pickup_sf, color = \"red\", size = 1, alpha = 0.5) +\n  theme_minimal() +\n  labs(\n    title = \"Map of Chicago with Pickup Points\",\n    x = \"Longitude\", y = \"Latitude\"\n  )\n\n\n\n# Maps for Dropoffs\npickup_sf &lt;- trips_chicago |&gt; \n  st_as_sf(coords = c(\"Pickup Centroid Longitude\", \"Pickup Centroid Latitude\"), crs = 4326, agr = \"constant\")\n\n\nggplot() +\n  geom_sf(data = chicago_shapefile, fill = \"lightblue\", color = \"black\") +\n  geom_sf(data = pickup_sf, color = \"red\", size = 1, alpha = 0.5) +\n  theme_minimal() +\n  labs(\n    title = \"Map of Chicago with Pickup Points\",\n    x = \"Longitude\", y = \"Latitude\"\n  )\n\n\n\n\n\n\n\nBelow we have the map segmenting pickup per company and showing the amount of trips for each location\n\n\nlibrary(RColorBrewer)\n\n# Creating aggregate database for segmenting\naggregated_data &lt;- trips_chicago |&gt; \n  group_by(`Pickup Centroid Longitude`, `Pickup Centroid Latitude`, Company) |&gt; \n  summarise(Trip_Count = n()) |&gt; \n  ungroup()\n\n`summarise()` has grouped output by 'Pickup Centroid Longitude', 'Pickup\nCentroid Latitude'. You can override using the `.groups` argument.\n\n# Calculate the total number of trips per company\ncompany_trip_counts &lt;- aggregated_data |&gt; \n  group_by(Company) |&gt; \n  summarise(Total_Trips = sum(Trip_Count)) |&gt; \n  arrange(desc(Total_Trips))\n\n# Reorder the Company factor levels based on the number of trips\naggregated_data &lt;- aggregated_data |&gt; \n  mutate(Company = factor(Company, levels = company_trip_counts$Company))\n\n# Create a custom color scale with different colors for the top companies\ntop_n &lt;- 10  # Number of top comps\n\ndistinct_colors &lt;- c(\n  RColorBrewer::brewer.pal(min(top_n, 8), \"Set1\"),\n  RColorBrewer::brewer.pal(min(top_n - 8, 8), \"Set2\"),\n  RColorBrewer::brewer.pal(min(top_n - 16, 12), \"Set3\")\n)\n\n# Assign distinct colors to the top companies\ncompany_colors &lt;- setNames(\n  c(distinct_colors, rep(\"grey\", length(company_trip_counts$Company) - length(distinct_colors))),\n  company_trip_counts$Company\n)\n\n# Convert to an sf object using Pickup Centroid Longitude and Pickup Centroid Latitude\npickup_sf &lt;- st_as_sf(aggregated_data, coords = c(\"Pickup Centroid Longitude\", \"Pickup Centroid Latitude\"), crs = 4326, agr = \"constant\")\n\n# Read the Chicago shapefile\nchicago_shapefile &lt;- st_read(\"boundaries/chicago_shape.shp\")\n\nReading layer `chicago_shape' from data source \n  `C:\\Users\\jhcsa\\Documents\\siteRforDS\\boundaries\\chicago_shape.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -87.94011 ymin: 41.64454 xmax: -87.52414 ymax: 42.02304\nGeodetic CRS:  WGS 84\n\n# Plot the map with the pickup points, colored by Company and sized by the number of trips\nggplot() +\n  geom_sf(data = chicago_shapefile, fill = \"lightblue\", color = \"black\") +\n  geom_sf(data = pickup_sf, aes(color = Company, size = Trip_Count), alpha = 1) +\n  scale_size_continuous(name = \"Trip Count\", range = c(1, 10)) + # Adjust the range as needed\n  theme_minimal() +\n  labs(\n    title = \"Map of Chicago with Pickup Points Colored by Company and Sized by Trip Count\",\n    x = \"Longitude\", y = \"Latitude\"\n  ) +\n  scale_color_manual(name = \"Company\", values = company_colors) + \n  guides(color = guide_legend(ncol = 2, override.aes = list(size = 4)), \n         size = guide_legend(order = 1)) + \n  theme(\n    legend.position = \"right\",\n    legend.text = element_text(size = 8),\n    legend.title = element_text(size = 10),\n    legend.key.size = unit(0.5, \"lines\")\n  )\n\n\n\n\n\n\n\n\nEconometrics and Machine Learning models\n\nAs a more sophisticated way for using the dataset to extract insights, we can leverage Machine Learning models for prediction and clustering.\n\n\nHere we used a Linear Regression fro Fare, a Random Forest for Fare Prediction and K-Means + PCA to cluster the trips and get a better understanding opf the clusters in 2 dimensions.\n\n\nDue to the lack of computational resources, we conducted this part of the analysis in a Jupyter Notebook in Google Collab. Link for the notebook"
  },
  {
    "objectID": "APS.html#data-analysis",
    "href": "APS.html#data-analysis",
    "title": "APS - R para Ciência de Dados",
    "section": "Data Analysis",
    "text": "Data Analysis\n\nDealing with NA values\n\nLooking at the results of the summary, we noticed a lot of NA values throughout the features. For some of them (features 7,8, 9, 10, 18, 19, 20, 21, 22, 23), the author tells us previously that the column will often or always show NA values for locations outside Chicago.\n\n\nBecause of that, we made a decision of omitting the lines for which those features = NA. We are assuming here that most, if not all, NAs in those columns are due to the fact that the trip was held outside Chicago at some point (either the pickup or dropoff).\n\n\nWe do recognize though two consequences that will follow that decision: (i) that our analysis and any eventual models will not be applicable to trips held outside of Chicago in any direction (pickup or dropoff).; (ii) We may be excluding some lines that for some reason where related to trips held within Chicago, therefore redduccing the amount of data we have.\n\n\nEven though there are those consequences, we still believe wee can create insightful analysis from the remaining data, understanding though the reduction of scope for which those insights will be applicable.\n\n\n\n\n# Selecting the columns we want to check for NAs\ncolumns_list &lt;- c(\n  \"Pickup Census Tract\", \"Dropoff Census Tract\",\n  \"Pickup Community Area\", \"Dropoff Community Area\",\n  \"Pickup Centroid Latitude\", \"Pickup Centroid Longitude\",\n  \"Pickup Centroid Location\", \"Dropoff Centroid Latitude\",\n  \"Dropoff Centroid Longitude\", \"Dropoff Centroid Location\"\n)\n\n# Filtering the dataset\ntaxi_db_chicago &lt;- taxi_db |&gt; \n  filter(if_all(all_of(columns_list), ~ !is.na(.))) # Applying !is.na() across all columns in columns_list\n\n\nAlso let’s correct some company names that came slightly different but are referring to the same company.\n\n\ncompany_mapping &lt;- c(\n  \"312 Medallion Management Corp\" = \"312 Medallion Management Corp\",\n  \"Medallion Management Corp\" = \"312 Medallion Management Corp\",\n  \"Blue Ribbon Taxi Association Inc.\" = \"Blue Ribbon Taxi Association Inc.\",\n  \"Blue Ribbon Taxi Association\" = \"Blue Ribbon Taxi Association Inc.\",\n  \"Blue Ribbon Taxi Association Inc\" = \"Blue Ribbon Taxi Association Inc.\",\n  \"Taxicab Insurance Agency Llc\" = \"Taxicab Insurance Agency, LLC\",\n  \"Taxicab Insurance Agency, LLC\" = \"Taxicab Insurance Agency, LLC\",\n  \"Taxi Affiliation Services\"  = \"Taxi Affiliation Services LLC - Yell\",\n  \"Taxi Affiliation Services Llc - Yell\" = \"Taxi Affiliation Services LLC - Yell\",\n  \"Taxi Affiliation Services LLC - Yell\" = \"Taxi Affiliation Services LLC - Yell\",\n  \"Choice Taxi Association Inc\" = \"Choice Taxi Association Inc\",\n  \"Choice Taxi Association\" = \"Choice Taxi Association Inc\"\n)\n\ntaxi_db_chicago &lt;- taxi_db_chicago |&gt; \n  mutate(Company = recode(Company, !!!company_mapping))\n\n\n\n\nNow, let’s evaluate the remaining data, and the appearance of NA values in other columns.\n\n\n# Evaluating other columns for NA values\ntaxi_db_chicago |&gt; \n  select(-all_of(columns_list)) |&gt; \n  summary()\n\n   Trip ID            Taxi ID          Trip Start Timestamp Trip End Timestamp\n Length:308344      Length:308344      Length:308344        Length:308344     \n Class :character   Class :character   Class :character     Class :character  \n Mode  :character   Mode  :character   Mode  :character     Mode  :character  \n                                                                              \n                                                                              \n                                                                              \n                                                                              \n  Trip Seconds       Trip Miles           Fare             Tips       \n Min.   :    0.0   Min.   :  0.000   Min.   :  0.00   Min.   :  0.00  \n 1st Qu.:  346.0   1st Qu.:  0.700   1st Qu.:  6.25   1st Qu.:  0.00  \n Median :  570.0   Median :  1.330   Median :  9.00   Median :  2.00  \n Mean   :  944.7   Mean   :  5.014   Mean   : 17.75   Mean   :  3.09  \n 3rd Qu.: 1374.0   3rd Qu.:  5.300   3rd Qu.: 33.00   3rd Qu.:  4.00  \n Max.   :86340.0   Max.   :664.900   Max.   :814.00   Max.   :110.00  \n NA's   :57        NA's   :3         NA's   :1084     NA's   :1084    \n     Tolls              Extras           Trip Total      Payment Type      \n Min.   :   0.000   Min.   :   0.000   Min.   :   0.00   Length:308344     \n 1st Qu.:   0.000   1st Qu.:   0.000   1st Qu.:   7.75   Class :character  \n Median :   0.000   Median :   0.000   Median :  11.22   Mode  :character  \n Mean   :   0.025   Mean   :   1.459   Mean   :  22.56                     \n 3rd Qu.:   0.000   3rd Qu.:   2.000   3rd Qu.:  43.00                     \n Max.   :4444.440   Max.   :5051.100   Max.   :8896.63                     \n NA's   :1084       NA's   :1084       NA's   :1084                        \n   Company         \n Length:308344     \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\n\n\nIt is interesting to note that for some features, there is exactly the same number of NAs. Let’s investigate those lines further.\n\n\ntemp_db &lt;- taxi_db_chicago |&gt;\n  filter(is.na(taxi_db_chicago$Fare)) |&gt; \n  select(-all_of(columns_list))\n  \ntemp_db |&gt; summary()\n\n   Trip ID            Taxi ID          Trip Start Timestamp Trip End Timestamp\n Length:1084        Length:1084        Length:1084          Length:1084       \n Class :character   Class :character   Class :character     Class :character  \n Mode  :character   Mode  :character   Mode  :character     Mode  :character  \n                                                                              \n                                                                              \n                                                                              \n                                                                              \n  Trip Seconds      Trip Miles          Fare           Tips          Tolls     \n Min.   :   0.0   Min.   : 0.000   Min.   : NA    Min.   : NA    Min.   : NA   \n 1st Qu.: 268.0   1st Qu.: 0.590   1st Qu.: NA    1st Qu.: NA    1st Qu.: NA   \n Median : 501.0   Median : 1.255   Median : NA    Median : NA    Median : NA   \n Mean   : 932.4   Mean   : 4.769   Mean   :NaN    Mean   :NaN    Mean   :NaN   \n 3rd Qu.:1288.0   3rd Qu.: 4.105   3rd Qu.: NA    3rd Qu.: NA    3rd Qu.: NA   \n Max.   :7193.0   Max.   :47.830   Max.   : NA    Max.   : NA    Max.   : NA   \n NA's   :35                        NA's   :1084   NA's   :1084   NA's   :1084  \n     Extras       Trip Total   Payment Type         Company         \n Min.   : NA    Min.   : NA    Length:1084        Length:1084       \n 1st Qu.: NA    1st Qu.: NA    Class :character   Class :character  \n Median : NA    Median : NA    Mode  :character   Mode  :character  \n Mean   :NaN    Mean   :NaN                                         \n 3rd Qu.: NA    3rd Qu.: NA                                         \n Max.   : NA    Max.   : NA                                         \n NA's   :1084   NA's   :1084                                        \n\ntemp_db |&gt; group_by(temp_db$`Payment Type`) |&gt; \n  summarise(Count = n()) |&gt; \n  mutate(Percentage = Count / sum(Count) * 100)\n\n# A tibble: 3 × 3\n  `temp_db$\\`Payment Type\\`` Count Percentage\n  &lt;chr&gt;                      &lt;int&gt;      &lt;dbl&gt;\n1 Cash                        1032      95.2 \n2 Credit Card                   35       3.23\n3 Mobile                        17       1.57\n\n\n\n\n\nAs we can see, for most of this data the payment method is cash, what makes sense since it is harder to track Fare, Tips, Extras, Tolls and therefore Trip Totals when the user is paying by cash.\n\n\nIn order to not loose those values and to maintain consistency, we can fill those NAs with the Median Value of the column. We can do that for all numeric columns.\n\n\n# Filling the NAs with median value\ntaxi_db_chicago &lt;- taxi_db_chicago |&gt; \n  mutate(across(where(is.numeric), ~ifelse(is.na(.), median(., na.rm = TRUE), .))) # Usando função anônima com .\n\n\n\nData Types\n\nAs we could see from the summaries above, some data types are not the ideal for data analysis. For example, the timestamps are of type character in the dataset. We could definetely, during the analysis, convert them to objects that are more related to standard time formats, that way it will be easier to manipulate this data, build models and extract insight from them.\n\n\ntaxi_db_chicago |&gt;\n  select(`Trip End Timestamp`,  `Trip Start Timestamp`) |&gt; \n  sapply(class) |&gt; \n  print()\n\n  Trip End Timestamp Trip Start Timestamp \n         \"character\"          \"character\" \n\n## Converting to datetime\n# Transformando a classe das colunas de tempo para tipo data\ntaxi_db_chicago &lt;- taxi_db_chicago |&gt; \n  mutate(\n    `Trip Start Timestamp` = mdy_hms(`Trip Start Timestamp`, tz = \"America/Chicago\"),\n    `Trip End Timestamp` = mdy_hms(`Trip End Timestamp`, tz = \"America/Chicago\")\n  )\n\n\n\n\n\nFinal Dataset\n\nFrom now on we will use this treated version of the dataset, the treated dataset is called trips_chicago.\n\n\n# New dataset\ntrips_chicago &lt;- taxi_db_chicago\n\n\n\n\n\nDescriptive Statistics\n\nIn the section Key Features we already called a summary() and a head() for a brief overview of the possible variables. Also, in this section we looked at some basic statistics such as mean, median, max and others. However, we can go deeper in this analysis by plotting histograms and box plots in order to get a better understanding of distributions. Also, we can benefit from an understanding of the behavior of dispersion and variance through the dataset features, pretty useful for some models.\n\n\nlibrary(ggcorrplot)\n\n# List of variables for descriptive analysis\nvariables &lt;- c(\"Trip Seconds\", \"Trip Miles\", \"Fare\", \"Tips\", \"Extras\", \"Trip Total\")\n\n# Plotting histograms and box plots for each variable after log transformation\nfor (var in variables) {\n  # Add a small constant to handle zero values\n  trips_chicago &lt;- trips_chicago |&gt; mutate(\"{var}_log\" := log1p(.data[[var]]))\n  \n  # Histogram for log-transformed variable\n  p1 &lt;- ggplot(trips_chicago, aes(x = .data[[paste0(var, \"_log\")]])) +\n    geom_histogram(bins = 30, fill = \"#feb303\", color = \"black\") +\n    labs(title = paste(\"Log-Transformed Histogram of\", var), x = paste(var, \"(log)\"), y = \"Density (%)\")\n  print(p1)\n  \n  # Box plot for log-transformed variable\n  p2 &lt;- ggplot(trips_chicago, aes(y = .data[[paste0(var, \"_log\")]])) +\n    geom_boxplot(fill = \"#feb303\", color = \"black\") +\n    labs(title = paste(\"Log-Transformed Boxplot of\", var), y = paste(var, \"(log)\"))\n  print(p2)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Analyzing variance and dispersion for log-transformed variables\nfor (var in variables) {\n  log_var &lt;- paste0(var, \"_log\")\n  \n  if (log_var %in% colnames(trips_chicago)) {\n    var_summary &lt;- trips_chicago |&gt; summarize(\n      mean = mean(.data[[log_var]], na.rm = TRUE),\n      median = median(.data[[log_var]], na.rm = TRUE),\n      sd = sd(.data[[log_var]], na.rm = TRUE),\n      var = var(.data[[log_var]], na.rm = TRUE),\n      min = min(.data[[log_var]], na.rm = TRUE),\n      max = max(.data[[log_var]], na.rm = TRUE),\n      q1 = quantile(.data[[log_var]], 0.25, na.rm = TRUE),\n      q3 = quantile(.data[[log_var]], 0.75, na.rm = TRUE)\n    )\n    print(paste(\"Descriptive Statistics for Log-Transformed\", var))\n    print(var_summary)\n  }\n}\n\n[1] \"Descriptive Statistics for Log-Transformed Trip Seconds\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  6.27   6.35  1.40  1.96     0  11.4  5.85  7.23\n[1] \"Descriptive Statistics for Log-Transformed Trip Miles\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  1.22  0.846  1.01  1.03     0  6.50 0.531  1.84\n[1] \"Descriptive Statistics for Log-Transformed Fare\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  2.57   2.30 0.812 0.660     0  6.70  1.98  3.52\n[1] \"Descriptive Statistics for Log-Transformed Tips\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 0.990   1.10 0.911 0.831     0  4.71     0  1.61\n[1] \"Descriptive Statistics for Log-Transformed Extras\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 0.505      0 0.747 0.559     0  8.53     0  1.10\n[1] \"Descriptive Statistics for Log-Transformed Trip Total\"\n# A tibble: 1 × 8\n   mean median    sd   var   min   max    q1    q3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  2.77   2.50 0.844 0.712     0  9.09  2.17  3.78\n\n# Create log-transformed variables for correlation analysis\ntrips_chicago &lt;- trips_chicago |&gt; \n  mutate(\n    Trip_Seconds_log = log1p(`Trip Seconds`),\n    Trip_Miles_log = log1p(`Trip Miles`),\n    Fare_log = log1p(Fare),\n    Tips_log = log1p(Tips),\n    Extras_log = log1p(Extras),\n    Trip_Total_log = log1p(`Trip Total`)\n  )\n\n# Select the log-transformed variables for correlation analysis\nlog_transformed_vars &lt;- trips_chicago |&gt; \n  select(Trip_Seconds_log, Trip_Miles_log, Fare_log, Tips_log, Extras_log, Trip_Total_log)\n\n# Compute the correlation matrix\ncor_matrix &lt;- cor(log_transformed_vars, use = \"complete.obs\")\n\n# Plot the correlation matrix\nggcorrplot(cor_matrix, \n           hc.order = TRUE, \n           type = \"lower\", \n           lab = TRUE, \n           lab_size = 3.5, \n           method = \"circle\", \n           colors = c(\"#6D9EC1\", \"white\", \"#E46726\"), \n           title = \"Correlation Matrix of Log-Transformed Variables\", \n           ggtheme = theme_minimal()) +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\", hjust = 0.5),\n    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),\n    axis.text.y = element_text(angle=0)\n    )\n\n\n\n\n\nlibrary(ggplot2) # Already in tidyverse\n\ntheme_set(theme_bw())\n\n# Example of histogram\ntrips_chicago |&gt; \n  ggplot(aes(x = taxi_db_chicago$`Trip Miles`, y=..density..)) +\n  geom_histogram(bins = 25, fill = \"#feb303\", color = \"black\") +\n  xlim(0, 75) +\n  ylim(0, 0.045) +\n  labs(title = \"Histogram for Trip Miles\", x = \"Trip Miles\", y = \"Density (%)\")\n\n\n\n\n\ntheme_set(theme_bw())\n\n# Example of boxplot\ntrips_chicago |&gt; \n  ggplot(aes(y = trips_chicago$`Trip Miles`)) +\n  geom_boxplot(fill = \"#feb303\", color = \"black\") +\n  ylim(0,5) +\n  labs(title = \"Boxplot for Trip Miles\", y = \"Trip Miles\")\n\n\n\n\n\n\n\nTrying to plot this boxplot, for example, already shows the strong concentration of trips in the ‘few miles’ category, what can also be seen in the histogram. Such kind of distribution will definetely interfere with the way we analyze this feature, we will probably need to apply some transformations to it such as applying log.\n\n\n\n\n\nGeographical analysis\n\nWe can use libraries that will help us plot in Chicago’s Map the places with most pickups or dropoffs. We can also visualize the data segmented by company in order to grasp a better understanding of market dynamics and competition landscape.\n\n\nBelow we have the maps for pickups and dropoffs\n\n\nlibrary(ggplot2)\nlibrary(sf)\n\nLinking to GEOS 3.11.2, GDAL 3.8.2, PROJ 9.3.1; sf_use_s2() is TRUE\n\nlibrary(dplyr)\n\n# Maps for Pickups\n# Convert to an sf object using Pickup Centroid Longitude and Pickup Centroid Latitude\npickup_sf &lt;- trips_chicago |&gt; \n  st_as_sf(coords = c(\"Pickup Centroid Longitude\", \"Pickup Centroid Latitude\"), crs = 4326, agr = \"constant\")\n\n# Read the Chicago shapefile\nchicago_shapefile &lt;- st_read(\"boundaries/chicago_shape.shp\")\n\nReading layer `chicago_shape' from data source \n  `C:\\Users\\jhcsa\\Documents\\siteRforDS\\boundaries\\chicago_shape.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -87.94011 ymin: 41.64454 xmax: -87.52414 ymax: 42.02304\nGeodetic CRS:  WGS 84\n\nggplot() +\n  geom_sf(data = chicago_shapefile, fill = \"lightblue\", color = \"black\") +\n  geom_sf(data = pickup_sf, color = \"red\", size = 1, alpha = 0.5) +\n  theme_minimal() +\n  labs(\n    title = \"Map of Chicago with Pickup Points\",\n    x = \"Longitude\", y = \"Latitude\"\n  )\n\n\n\n# Maps for Dropoffs\npickup_sf &lt;- trips_chicago |&gt; \n  st_as_sf(coords = c(\"Dropoff Centroid Longitude\", \"Dropoff Centroid Latitude\"), crs = 4326, agr = \"constant\")\n\n\nggplot() +\n  geom_sf(data = chicago_shapefile, fill = \"lightblue\", color = \"black\") +\n  geom_sf(data = pickup_sf, color = \"red\", size = 1, alpha = 0.5) +\n  theme_minimal() +\n  labs(\n    title = \"Map of Chicago with Dropoff Points\",\n    x = \"Longitude\", y = \"Latitude\"\n  )\n\n\n\n\n\n\n\nBelow we have the map segmenting pickup per company and showing the amount of trips for each location\n\n\nlibrary(RColorBrewer)\n\n# Creating aggregate database for segmenting\naggregated_data &lt;- trips_chicago |&gt; \n  group_by(`Pickup Centroid Longitude`, `Pickup Centroid Latitude`, Company) |&gt; \n  summarise(Trip_Count = n()) |&gt; \n  ungroup()\n\n`summarise()` has grouped output by 'Pickup Centroid Longitude', 'Pickup\nCentroid Latitude'. You can override using the `.groups` argument.\n\n# Calculate the total number of trips per company\ncompany_trip_counts &lt;- aggregated_data |&gt; \n  group_by(Company) |&gt; \n  summarise(Total_Trips = sum(Trip_Count)) |&gt; \n  arrange(desc(Total_Trips))\n\n# Reorder the Company factor levels based on the number of trips\naggregated_data &lt;- aggregated_data |&gt; \n  mutate(Company = factor(Company, levels = company_trip_counts$Company))\n\n# Create a custom color scale with different colors for the top companies\ntop_n &lt;- 10  # Number of top comps\n\ndistinct_colors &lt;- c(\n  RColorBrewer::brewer.pal(min(top_n, 8), \"Set1\"),\n  RColorBrewer::brewer.pal(min(top_n - 8, 8), \"Set2\"),\n  RColorBrewer::brewer.pal(min(top_n - 16, 12), \"Set3\")\n)\n\n# Assign distinct colors to the top companies\ncompany_colors &lt;- setNames(\n  c(distinct_colors, rep(\"grey\", length(company_trip_counts$Company) - length(distinct_colors))),\n  company_trip_counts$Company\n)\n\n# Convert to an sf object using Pickup Centroid Longitude and Pickup Centroid Latitude\npickup_sf &lt;- st_as_sf(aggregated_data, coords = c(\"Pickup Centroid Longitude\", \"Pickup Centroid Latitude\"), crs = 4326, agr = \"constant\")\n\n# Read the Chicago shapefile\nchicago_shapefile &lt;- st_read(\"boundaries/chicago_shape.shp\")\n\nReading layer `chicago_shape' from data source \n  `C:\\Users\\jhcsa\\Documents\\siteRforDS\\boundaries\\chicago_shape.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -87.94011 ymin: 41.64454 xmax: -87.52414 ymax: 42.02304\nGeodetic CRS:  WGS 84\n\n\n\n# Plot the map with the pickup points, colored by Company and sized by the number of trips\nggplot() +\n  geom_sf(data = chicago_shapefile, fill = \"lightblue\", color = \"black\") +\n  geom_sf(data = pickup_sf, aes(color = Company, size = Trip_Count), alpha = 1) +\n  scale_size_continuous(name = \"Trip Count\", range = c(1, 10)) + # Adjust the range as needed\n  theme_minimal() +\n  labs(\n    title = \"Map of Chicago with Pickup Points Colored by Company and Sized by Trip Count\",\n    x = \"Longitude\", y = \"Latitude\"\n  ) +\n  scale_color_manual(name = \"Company\", values = company_colors) + \n  guides(color = guide_legend(ncol = 2, override.aes = list(size = 4)), \n         size = guide_legend(order = 1)) + \n  theme(\n    legend.position = \"right\",\n    legend.text = element_text(size = 8),\n    legend.title = element_text(size = 10),\n    legend.key.size = unit(0.5, \"lines\")\n  )\n\n\n\n\n\n\n\n\nEconometrics and Machine Learning models\n\nAs a more sophisticated way for using the dataset to extract insights, we can leverage Machine Learning models for prediction and clustering.\n\n\nHere we used a Linear Regression fro Fare, a Random Forest for Fare Prediction and K-Means + PCA to cluster the trips and get a better understanding opf the clusters in 2 dimensions.\n\n\nDue to the lack of computational resources, we conducted this part of the analysis in a Jupyter Notebook in Google Collab. Link for the notebook"
  }
]